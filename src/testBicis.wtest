import accesorios.*
import bicis.*
import deposito.*

describe "Test de Bicis"{
	
	// Para bici1
	
	const bici1 = new Bicicleta ( rodado = 28, largo = 150, marca = "Olmo" )
	const farolito = new Farolito()
	
	//Para bici2
	
	const bici2 = new Bicicleta ( rodado = 26, largo = 110, marca = "Legnano" )
	const farolito2 = new Farolito()
	const canasto = new Canasto ( volumen = 8)
	const morral1 = new Morral ( largo = 21,tieneOjoDeGato = true )
	
	//Para bici3
	
	const bici3 = new Bicicleta  ( rodado = 20,largo = 90,marca = "Legnano" )
	const morral2 = new Morral ( largo = 6,tieneOjoDeGato = false )
	
	fixture {
		
		//Bici 1
		bici1.ponerAccesorio(farolito)
		
		//Bici 2
		bici2.ponerAccesorio(farolito2)
		bici2.ponerAccesorio(canasto)
		bici2.ponerAccesorio(morral1)
		
		//Bice 3
		bici3.ponerAccesorio(morral2)
	}
	

	test "Bici 1" {
		
		assert.equals(85,bici1.altura())
		assert.equals(34,bici1.velocidadDeCrucero())
		assert.equals(0, bici1.carga())
		assert.equals(14.5, bici1.peso())
		assert.that(bici1.tieneLuz())
		assert.equals(1,bici1.cantidadAccesoriosLivianos())
	}
	
	test "Bici 2" {
		
		assert.equals(80,bici2.altura())
		assert.equals(28,bici2.velocidadDeCrucero())
		assert.equals(23, bici2.carga())
		assert.equals(15.5, bici2.peso())
		assert.that(bici2.tieneLuz())
		assert.equals(2,bici2.cantidadAccesoriosLivianos())
	}
	
	test "Bici 3" {
		
		assert.equals(65,bici3.altura())
		assert.equals(22,bici3.velocidadDeCrucero())
		assert.equals(2, bici3.carga())
		assert.equals(11.2, bici3.peso())
		assert.notThat(bici3.tieneLuz())
		assert.equals(0,bici3.cantidadAccesoriosLivianos())
	}	
}